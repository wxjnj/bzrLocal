Apply:
  actAs:
    Timestampable: ~
  columns:
    company: string(255)
    contacter: string(255)
    address: string(255)
    tel: string(255)
    content: string(1000)
    
Question:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    content: clob
    expert_id: integer
    user_id: integer
    answer_content: clob
    is_finish: { type: boolean, default: false}
  relations:
    User:
     type: one
     class: sfGuardUser
     local: user_id
     foreign: id

Classes:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    name: { type: string(50), notnull: true}
    description: string(1000)
    user_id: integer
  relations:
    Student:
      class: sfGuardUser
      refClass: ClassesStudent
      local: classes_id
      foreign: user_id
    Teacher:
      type: many
      class: sfGuardUser
      local: id
      foreign: classes_id
    Works:
      type: many
      class: Work
      local: id
      foreign: classes_id

ClassesStudent:
  actAs: [Timestampable]
  columns:
    classes_id: 
      type: integer
      primary: true
    user_id: 
      type: integer
      primary: true
  relations:
    Student:
      class: sfGuardUser
      local: user_id
      onDelete: CASCADE
    Classes:
      class: Classes
      local: classes_id
      onDelete: CASCADE
       
Expert:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    name: { type: string(50), notnull: true}
    job: string(255)
    sub_description: string(1000)
    direction: string(1000)
    description: clob
    picture: string(255)
    weight: integer
    type:
      type: enum
      values: [1,2]
      default: 1
    user_id: integer
  relations:
    Questions:
      type: many
      class: Question
      local: id
      foreign: expert_id
    User:
      type: one
      class: sfGuardUser
      local: user_id
      foreign: id
      foreignType: one
      cascade: [delete]
    
Video:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    experter: string(50)
    sub_description: string(1000)
    attachment: string(255)
    attachment_name: string(255)
    url: { type: string(255), notnull: true}
    url_name: string(255)
    thumbnailsPath: string(255)
    weight: integer
    
Notice:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    content: clob
    weight: integer
    
Share:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    picture: string(255)
    sub_description: string(1000)
    content: clob
    weight: integer
    user_id: integer
    is_rank: { type: boolean, default: false}
  relations:
    User:
      type: one
      class: sfGuardUser
      local: user_id
      foreign: id
      foreignAlias: Shares
      
Category:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    name: { type: string(100), notnull: true}
  relations:
    Files:
      type: many
      class: File
      local: id
      foreign: category_id
      
File:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    sub_description: string(1000)
    keywords: string(255)
    category_id: integer
    user_id: integer
    price: 
      type: enum
      values: [1,2,3,4,5,6]
      default: 1
    is_security: { type: boolean, default: false}
    attachment: { type: string(255), notnull: true}
    attachment_name: string(255)
    attachment_size: integer
    read_num: integer
    picture: string(255)
    is_rank: { type: boolean, default: false}
  relations:
    User:
      type: one
      class: sfGuardUser
      local: user_id
      foreign: id
      foreignAlias: Files
    Records:
      type: many
      class: DownloadRecords
      local: id
      foreign: file_id
      foreignAlias: File
      cascade: [delete]

DownloadRecords:
  actAs:
    Timestampable: ~
  columns:
    file_id: integer
    user_id: integer
    price: integer
  relations:
    User:
      type: one
      class: sfGuardUser
      local: user_id
      foreign: id
      foreignAlias: Records
            
Need:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    description: string(2000)
    price: integer
    user_id: integer
    is_finish: { type: boolean, default: false}
  relations:
    Ans:
      type: many
      class: Ans
      local: id
      foreign: need_id
      cascade: [delete]
    User:
      type: one
      class: sfGuardUser
      local: user_id
      foreign: id
      foreignAlias: Needs

Ans:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    content: string(1000)
    attachment: string(255)
    attachment_name: string(255)
    attachment_size: integer
    need_id: integer
    user_id: integer
    is_true: { type: boolean, default: false}
  relations:
    User:
      type: one
      class: sfGuardUser
      local: user_id
      foreign: id

Activity:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    content: clob
    weight: integer
        
Work:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    picture: string(255)
    sub_description: string(1000)
    end_time: timestamp
    video: string(255)
    video_name: string(255)
    video_url: string(500)
    weight: integer
    classes_id: integer
    user_id: integer
  relations:
    Jobs:
      type: many
      class: Job
      local: id
      foreign: work_id
      cascade: [delete]
      
Job:  
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    content: clob
    attachment: string(255)
    attachment_name: string(255)
    work_id: integer
    user_id: integer
    weight: integer
  relations:
    User:
      type: one
      class: sfGuardUser
      local: user_id
      foreign: id
        
Link:
  columns:
    title: { type: string(255), notnull: true}
    url: { type: string(1000), notnull: true}
    weight: integer
    
Images:
  columns:
    title: { type: string(255), notnull: true}
    picture: { type: string(255), notnull: true}
    url: string(1000)
    content: clob
    weight: integer
    type:
      type: enum
      values: [1,2]
      default: 1
    
Topic:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    url: string(1000)
    content: clob
    weight: integer
    
SuccessCase:
  actAs:
    Timestampable: ~
  columns:
    token: { type: string(255), notnull: true, unique: true }
    title: { type: string(255), notnull: true}
    url: string(1000)
    content: clob
    weight: integer
    
Advertising:
  columns:
    title: { type: string(255), notnull: true}
    picture: { type: string(255), notnull: true}
    url: string(1000)
    content: clob
    type:
      type: enum
      values: [1,2,3,4,5,6,7,8,9,10]
      default: 1