<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    nxetd
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: sfGuardUser.class.php,v 1.16 2012/08/30 06:25:26 gef Exp $
 */
class sfGuardUser extends PluginsfGuardUser
{
	public function save(Doctrine_Connection $conn = null) {
	
		if ($this->getEmailAddress() == '') {
			$this->setEmailAddress ( $this->getUsername().'@nxetd.com' );
		}
				
		return parent::save ( $conn );
	}

	public function getActiveState()
	{
		if($this->getIsActive()==1)
			return '激活';
		else
			return '禁用';
	}
	public function getRoleLevel(){
		$role =  $this->getCurrentRole();
		if($role->getCode() ==  sfConfig::get("app_root_role_code")){
			return 'a';
		}elseif ($role->getCode() == '000099'){
			return 'b';
		}elseif ($role->getLevel() == 1){
			return 'c';
		}elseif ($role->getLevel() == 2){
			return 'c';
		}elseif ($role->getLevel() == 3){
			return 'd';
		}
	}
	public function getUserLevel()
	{
		if($this->getIsSuperAdmin() == 1)
			return '超级管理员';
		else
			return '普通用户';
	}
	
	public function __toString()
	{
		return $this->getUsername();
	}
	
	public function getName()
	{
		return $this->getNickName();
	}
	
	public function getHeadPortraitPath()
	{
		if($this->head_portrait)
			return '/uploads/'.$this->head_portrait;
		else
			return sfConfig::get('sf_web_idr').'/images/avatar.php.gif';
	}
	
	public function getCurrentRole()
	{
		$user = sfContext::getInstance()->getUser();
		if(!$user->hasAttribute('current_role_id'))
		{
			$roles = $user->getGuardUser()->Roles;
			if(count($roles)>0)
				return $roles[0];
			else
				return null;
		}
		$role_id = $user->getAttribute('current_role_id');
		$role = Doctrine::getTable('Role')->findOneById($role_id);
		return $role;
	}
	
	public function getAllPostedRepliesNum()
	{
		$q1 = Doctrine::getTable('Posted')->createQuery('c')
		->where('c.user_id = ?',$this->getId())
		->count();
		$q2 = Doctrine::getTable('Reply')->createQuery('c')
		->where('c.user_id = ?',$this->getId())
		->count();
		
		return $q1+$q2;
	}
	//bbs判断用户拥有的版块权限
	public function hasForums($forum_id)
	{
		$have_forums = $this->getForums();
		foreach($have_forums as $value)
		{
			if($value->getId() == $forum_id)
			{
				return 1;
			}
		}
	}
}