<?php

/**
 * BaseAdvertising
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $picture
 * @property string $url
 * @property clob $content
 * @property enum $type
 * 
 * @method string      getTitle()   Returns the current record's "title" value
 * @method string      getPicture() Returns the current record's "picture" value
 * @method string      getUrl()     Returns the current record's "url" value
 * @method clob        getContent() Returns the current record's "content" value
 * @method enum        getType()    Returns the current record's "type" value
 * @method Advertising setTitle()   Sets the current record's "title" value
 * @method Advertising setPicture() Sets the current record's "picture" value
 * @method Advertising setUrl()     Sets the current record's "url" value
 * @method Advertising setContent() Sets the current record's "content" value
 * @method Advertising setType()    Sets the current record's "type" value
 * 
 * @package    bzr
 * @subpackage model
 * @author     gefei
 * @version    SVN: $Id: Builder.php,v 1.1 2012/05/04 06:47:28 zhaoy Exp $
 */
abstract class BaseAdvertising extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('advertising');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('picture', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 1,
              1 => 2,
              2 => 3,
              3 => 4,
              4 => 5,
              5 => 6,
              6 => 7,
              7 => 8,
              8 => 9,
              9 => 10,
             ),
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}