<?php

/**
 * BaseExpert
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $token
 * @property string $name
 * @property string $job
 * @property string $sub_description
 * @property string $direction
 * @property clob $description
 * @property string $picture
 * @property integer $weight
 * @property enum $type
 * @property integer $user_id
 * @property Doctrine_Collection $Questions
 * @property sfGuardUser $User
 * 
 * @method string              getToken()           Returns the current record's "token" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getJob()             Returns the current record's "job" value
 * @method string              getSubDescription()  Returns the current record's "sub_description" value
 * @method string              getDirection()       Returns the current record's "direction" value
 * @method clob                getDescription()     Returns the current record's "description" value
 * @method string              getPicture()         Returns the current record's "picture" value
 * @method integer             getWeight()          Returns the current record's "weight" value
 * @method enum                getType()            Returns the current record's "type" value
 * @method integer             getUserId()          Returns the current record's "user_id" value
 * @method Doctrine_Collection getQuestions()       Returns the current record's "Questions" collection
 * @method sfGuardUser         getUser()            Returns the current record's "User" value
 * @method Expert              setToken()           Sets the current record's "token" value
 * @method Expert              setName()            Sets the current record's "name" value
 * @method Expert              setJob()             Sets the current record's "job" value
 * @method Expert              setSubDescription()  Sets the current record's "sub_description" value
 * @method Expert              setDirection()       Sets the current record's "direction" value
 * @method Expert              setDescription()     Sets the current record's "description" value
 * @method Expert              setPicture()         Sets the current record's "picture" value
 * @method Expert              setWeight()          Sets the current record's "weight" value
 * @method Expert              setType()            Sets the current record's "type" value
 * @method Expert              setUserId()          Sets the current record's "user_id" value
 * @method Expert              setQuestions()       Sets the current record's "Questions" collection
 * @method Expert              setUser()            Sets the current record's "User" value
 * 
 * @package    bzr
 * @subpackage model
 * @author     gefei
 * @version    SVN: $Id: Builder.php,v 1.1 2012/05/04 06:47:28 zhaoy Exp $
 */
abstract class BaseExpert extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('expert');
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('job', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('sub_description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('direction', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('picture', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('weight', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 1,
              1 => 2,
             ),
             'default' => 1,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Question as Questions', array(
             'local' => 'id',
             'foreign' => 'expert_id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'cascade' => array(
             0 => 'delete',
             )));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}