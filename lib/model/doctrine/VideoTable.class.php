<?php

/**
 * VideoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class VideoTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object VideoTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Video');
    }
//     public function getList($category_ids, $limit = 4, $source = 1,$is_mem=false,$memname=null) {
//     	$q = $this->createQuery ( 't' )
//     	->select('t.id,t.path,t.thumbnails_path,t.title,c.title,c.token')
//     	->leftJoin('t.Contents c')
//     	->where('c.is_publish = 1 and c.is_delete = 0')
//     	->orderBy ( 'c.published_date desc' )
//     	->limit ( $limit );
    
//     	if (is_array ( $category_ids )) {
//     		$qwhere = 'c.category_id = ?';
//     		$count = count ( $category_ids );
//     		for($i = 1; $i < $count; $i ++) {
//     			$qwhere .= ' or c.category_id = ?';
//     		}
//     		$q->andWhere ( $qwhere, $category_ids );
//     	} elseif ($category_ids != null) {
//     		$q->andWhere ( 'c.category_id = ?', $category_ids );
//     	}
    
//     	if ($is_mem) {
//     		return $this->getNormalExecute ( $memname, $q );
//     	} else {
//     		return $q->execute ();
//     	}
//     }
//     public function getResult($category_id, $path, $source) {
//     	$q = $this->createQuery ( 't' )
//     	->select('t.id,t.path,t.thumbnails_path,t.title,c.title,c.token')
//     	->leftJoin('t.Contents c')
//     	->where ( 'c.category_id = ? and t.path =?', array (
//     			$category_id,
//     			$path
//     	) )->andWhere ( 'c.source = ?', $source );
    
//     	return $q->execute ();
//     }
//     public function getResultBbs($content_id,$path, $source) {
    
//     	$q = $this->createQuery ( 't' )
//     	->select('t.id')
//     	->where ( 't.content_id = ? and t.path = ? and t.source =?', array ($content_id,$path,$source ))
//     	->count();
    
//     	return $q;
//     }
    
    public function getListPager($page, $params,$maxPage= 4) {
    	$q = $this->getListQuery ( $params );
    
    	$pager = new sfDoctrinePager ( 'Video', $maxPage );
    	$pager->setQuery ( $q );
    	$pager->setPage ( $page );
    	$pager->init ();
    
    	return $pager;
    }
    
    public function getListQuery($params) {
    	$q = $this->createQuery ( 'v' )
    	->select('v.id,v.title,v.experter,v.thumbnailsPath,v.created_at')
    	->orderBy ( 'v.weight desc,v.created_at desc' );
    	
    	return $q;
    }
    
    public function getPager($page){
    
    	$q =  $this->createQuery('v')
    	->select('v.id,v.token,v.title,v.experter,v.thumbnailsPath,v.weight,v.created_at')
    	->orderBy('v.weight desc,v.created_at desc');
    
    	$pager = new sfDoctrinePager ( 'Video',  sfConfig::get('app_max_video_list_page',12));
    	$pager->setQuery ( $q );
    	$pager->setPage ( $page );
    	$pager->init ();
    
    	return $pager;
    
    }
    public function getList($limit){
    
    	$q =  $this->createQuery('v')
    	->select('v.id,v.token,v.title,v.experter,v.thumbnailsPath,v.weight,v.created_at')
    	->orderBy('v.weight desc,v.created_at desc')
    	->limit($limit);
    
    	return $q->execute();
    }
}