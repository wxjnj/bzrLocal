<?php

/**
 * NeedTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class NeedTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object NeedTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Need');
    }
    public function getPager($page){
    
    	$q =  $this->createQuery('n')
    	->select('n.id,n.token,n.title,n.price,n.is_finish,n.created_at,u.nick_name as uname')
    	->leftJoin('n.User u')
    	->orderBy('n.created_at desc');
    
    	$pager = new sfDoctrinePager ( 'Notice',  sfConfig::get('app_max_list_page',30));
    	$pager->setQuery ( $q );
    	$pager->setPage ( $page );
    	$pager->init ();
    
    	return $pager;
    
    }
    public function getMyAddPager($page){
    
    	$user = sfContext::getInstance()->getUser()->getGuardUser()->getId();
    	$q =  $this->createQuery('n')
    	->select('n.id,n.token,n.title,n.price,n.is_finish,n.created_at')
    	->leftJoin('n.User u')
    	->where('n.user_id = ?',$user)
    	->orderBy('n.created_at desc');
    
    	$pager = new sfDoctrinePager ( 'Notice',  sfConfig::get('app_max_question_list_page',30));
    	$pager->setQuery ( $q );
    	$pager->setPage ( $page );
    	$pager->init ();
    
    	return $pager;
    
    }
    public function getMyAnswerPager($page){
    
    	$user = sfContext::getInstance()->getUser()->getGuardUser()->getId();
    	$q =  $this->createQuery('n')
    	->select('n.id,n.token,n.title,n.price,n.is_finish,n.created_at,u.username as uname')
    	->leftJoin('n.User u')
    	->leftJoin('n.Ans a')
    	->where('a.user_id = ?',$user)
    	->orderBy('n.created_at desc');
    
    	$pager = new sfDoctrinePager ( 'Notice',  sfConfig::get('app_max_question_list_page',30));
    	$pager->setQuery ( $q );
    	$pager->setPage ( $page );
    	$pager->init ();
    
    	return $pager;
    
    }
    public function getList($limit){
    
    	$q =  $this->createQuery('n')
    	->select('n.id,n.token,n.title,n.created_at')
    	->orderBy('n.created_at desc')
    	->limit($limit);
    
    	return $q->execute();
    }
    public function getUnFinishedList($limit){
    
    	$q =  $this->createQuery('n')
    	->select('n.id,n.token,n.title,n.created_at')
    	->where('n.is_finish = 0')
    	->orderBy('n.created_at asc')
    	->limit($limit);
    
    	return $q->execute();
    }
}